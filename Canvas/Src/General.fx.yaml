General As screen:
    BackgroundImage: =
    OnVisible: =Set(vSplash,true);

    "'AppFooter-Tablet_3' As 'AppFooter-Tablet'":
        ApplicationName: =gVersion
        BackgroundColor: =ThemeColors.Button
        CopyrightOwner: ="Demo"
        Fill: ='AppFooter-Tablet_3'.BackgroundColor
        Height: ='AppFooter-Tablet_3'.FooterHeight
        Y: =693

    "'AppHeader-Tablet_3' As 'AppHeader-Tablet'":
        AppLogo: ='ds-Logo-BW'
        HeaderTitle: ="Generative AI Assistant "
        LeftGradient: =ThemeColors.HeaderLeft
        MidGradient: =ThemeColors.HeaderMiddle
        RadiusBottomLeftPx: =0
        RightGradient: =ThemeColors.HeaderRight
        ShowLogo: =false
        Width: =Parent.Width
        ZIndex: =2

    Timer1 As timer:
        Duration: =5000
        OnTimerEnd: =Set(vSplash,false)
        Start: =vSplash
        Visible: =false
        X: =652
        Y: =710
        ZIndex: =3

    ContChatHistory As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Regular
        Fill: =RGBA(255, 255, 255, 1)
        Height: =289
        Width: =417
        X: =8
        Y: =389
        ZIndex: =4

        "GalChatHistory As gallery.'BrowseLayout_Vertical_OneTextOneImageVariant_ver4.0'":
            DelayItemLoading: =true
            Height: =247
            Items: =Sort(colHistory,Idx,SortOrder.Descending)
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplateFill: |-
                =If(Mod(ThisItem.Idx,2) = 1,Color.White,ColorValue("#f4f4f4"))
            TemplatePadding: =0
            TemplateSize: =72
            Width: =386
            X: =16
            Y: =12
            ZIndex: =1

            btnCopy As button:
                Color: =Color.Transparent
                DisabledColor: =Color.Transparent
                Fill: =Color.Transparent
                Height: =Parent.TemplateHeight
                HoverColor: =Color.Transparent
                HoverFill: =Color.Transparent
                OnSelect: =Copy(TrimEnds(ThisItem.ChatText)); Notify("Text copied to clipboard",NotificationType.Success,3000)
                PressedColor: =Color.Transparent
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Text: ="Button"
                Width: =Parent.Width
                ZIndex: =1

            imgAvatar As image:
                Height: =36
                Image: =ThisItem.Avatar
                OnSelect: =Select(Parent)
                RadiusBottomLeft: =100
                RadiusBottomRight: =100
                RadiusTopLeft: =100
                RadiusTopRight: =100
                Width: =36
                X: =3
                Y: =5
                ZIndex: =2

            lblChatText As label:
                FontWeight: =FontWeight.Normal
                Height: =62
                OnSelect: =Select(Parent)
                Overflow: =Overflow.Scroll
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: =ThisItem.ChatText
                VerticalAlign: =VerticalAlign.Top
                Width: =313
                X: =45
                Y: =5
                ZIndex: =3

            icoCopy As icon.Copy:
                Color: =RGBA(0, 170, 227, 1)
                Height: =21
                Icon: =Icon.Copy
                OnSelect: =Copy(TrimEnds(ThisItem.ChatText)); Notify("Text copied to clipboard",NotificationType.Success,3000)
                Width: =21
                X: =10
                Y: =46
                ZIndex: =4

        lblTextRemainingCountDown As label:
            Color: =If(Len(vChatHistory) > 8192, Color.Red, ThemeColors.Secondary)
            FontWeight: =FontWeight.Bold
            Height: =23
            Size: =13.5
            Text: =8192 - Len(vChatHistory) & " Characters Remaining in This Session"
            Width: =398
            X: =16
            Y: =259
            ZIndex: =2

    ContChatInput As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Regular
        Fill: =RGBA(255, 255, 255, 1)
        Height: =250
        Width: =417
        X: =8
        Y: =124
        ZIndex: =5

        txtGeneralPrompt As text:
            BorderColor: =ThemeColors.Secondary
            Clear: =true
            Color: =If(ModerationAlert,Color.White,Color.Black)
            Default: =""
            Fill: =If(ModerationAlert,Color.Red,Color.White)
            Height: =136
            HintText: =""
            Mode: =TextMode.MultiLine
            OnChange: =Clear(vReturnedFlags); Set(ModerationAlert,false); Select(btnSubmit)
            Size: =12
            Width: =386
            X: =16
            Y: =25
            ZIndex: =1

        lblModerationWarning As label:
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            FontWeight: =FontWeight.Bold
            Height: =22
            Size: =11
            Text: ="YOU HAVE TRIGGERED MODERATION RESTRICTIONS"
            Visible: =ModerationAlert
            Width: =386
            X: =16
            Y: =3
            ZIndex: =2

        lblTextCounter As label:
            Color: =If(8192 - (Len(vChatHistory) + Len(txtGeneralPrompt.Text)) <= 0 ,Color.Red,  ThemeColors.Secondary)
            Height: =25
            Text: =Len(txtGeneralPrompt.Text) & " Typed, " & 8192 - (Len(vChatHistory) + Len(txtGeneralPrompt.Text)) & " Remaining"
            Width: =230
            X: =16
            Y: =161
            ZIndex: =3

        btnSubmit As button:
            DisplayMode: =If(8192 - (Len(vChatHistory) + Len(txtGeneralPrompt.Text)) <= 0 ,DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =ThemeColors.Button
            HoverFill: =ThemeColors.Accent
            OnSelect: |-
                =// GET MODERATED KEYWORD RESTRICTIONS AND ITERATE PROMPT TO BUILD A FLAGGED ARRAY 
                With({TheList:Split(txtGeneralPrompt.Text," ")},
                ForAll(ChatAssistantKeyWordLists,
                    If(ThisRecord.Word in TheList,
                        Collect(vReturnedFlags,{Flag:ThisRecord.Word, Classification:ThisRecord.Classification})
                    )
                ));
                //IS THE FLAGGED ARRAY EMPTY -- AND IF NOT STOP AND RAISE FLAG?
                If(CountRows(vReturnedFlags) > 0 And CountRows(Filter(vReturnedFlags,Text(Classification) = "Black")) > 0, Set(ModerationAlert,true),
                
                // IF NO FLAGS EXIST, PROCESS AS NORMAL
                Concurrent(
                    Set(OpenAILogo,true),
                    Set(spinner,true),
                    Set(vGeneralPrompt,{Hide:false}),
                    Set(vLastPrompt,txtGeneralPrompt.Text)
                );
                
                // Make a Plain Text Log and append all entries for possiable use to send via email or whatever - BY USER
                Set(vChatHistory,vChatHistory & User().FullName & ": " & Char(10) & txtGeneralPrompt.Text & Char(13) & Char(13));
                
                // ********************************* BEGIN Chat History Collection USER ******************************************
                
                // Increment index from previous, and initially set from App.OnStart
                Set(vRowCounter,vRowCounter+1);
                
                Collect(colHistory,{Idx:vRowCounter,Avatar:User().Image,ChatText:txtGeneralPrompt.Text & Char(13) & Char(13)});
                
                // ******************************************** END *****************************************************************
                
                // ********************************* BEGIN CALLING AZURE OPENAI API**************************************************
                Set(vGeneralPrompt, AzureOpenAI.Completion(
                        "2022-12-01", //API Version
                        "cnxdevlab.openai.azure.com", //Host
                        "keep-alive", //Connection
                        "History: " & Substitute(Substitute(vChatHistory,User().FullName & ": ",""),"GPT: ","") & Char(13) & Char(13) & Prompt.Prefix & Prompt.UserPrompt & Prompt.Suffix, //Prompt
                        LookUp(ChatAssistantSetings,SettingsOwner = User().Email And isSelected = true).'Max Tokens', // Max Tokens
                        LookUp(ChatAssistantSetings,SettingsOwner = User().Email And isSelected = true).Temperature, // Temperature
                        0, // Frequency Penalty
                        0, // Presence Penalty
                        1, // Top P
                        1, // Best Of
                        "null" // Stop
                    )
                );
                // ******************************************** END *****************************************************************
                
                
                // ********************************* BEGIN Chat History Collection AI ****** ****************************************
                Set(vRowCounter,vRowCounter+1);
                Collect(colHistory,{Idx:vRowCounter,Avatar:azure,ChatText:Trim(First(vGeneralPrompt.choices).text) & Char(13) & Char(13)});
                // ******************************************** END *****************************************************************
                
                // *************************************** BEGIN DATABASE Logging *******************************************
                
                    // Begin Writing Database Logging
                    Set(vPatchRecord,Patch(ChatAssistantLogs,{
                                        TokensSent:vGeneralPrompt.usage.prompt_tokens,
                                        TokensReceived: vGeneralPrompt.usage.completion_tokens, 
                                        TokensTotal: vGeneralPrompt.usage.total_tokens,
                                        Sent: txtGeneralPrompt.Text,
                                        Received: First(vGeneralPrompt.choices).text,
                                        FullName: User().FullName,
                                        DTS: Now(),
                                        Rating:0,
                                        isGreyFlagged: If(CountRows(Filter(vReturnedFlags,Text(Classification) = "Grey")) > 0,
                                            true,
                                            false
                                        )
                                    }
                
                    )),
                
                // Make a Plain Text Log and append all entries for possiable use to send via email or whatever - BY AI
                Set(vChatHistory,vChatHistory & "GPT: " & Char(10) & Trim(First(vGeneralPrompt.choices).text) & Char(13) & Char(13));
                
                Concurrent(
                    Set(spinner,false),
                    Set(OpenAILogo,false),
                    Reset(txtGeneralPrompt)
                )
                ); //END MASSIVE "IF" BECAUSE MODERATION WAS NOT FLAGGED
            Text: ="Submit"
            X: =242
            Y: =186
            ZIndex: =4

        txtActiveProfile As label:
            Color: =ThemeColors.Accent
            FontWeight: =FontWeight.Bold
            Height: =22
            OnSelect: =Navigate(Settings,ScreenTransition.CoverRight)
            Size: =11
            Text: =LookUp(ChatAssistantSetings,SettingsOwner = User().Email And isSelected = true).'Setting Name'
            Visible: =!ModerationAlert
            Width: =386
            X: =16
            Y: =3
            ZIndex: =5

    imgLogo As image:
        Image: ='240'
        OnSelect: =Launch(vAppURL & "&hidenavbar=true",{},"_self")
        X: =20
        ZIndex: =8

    "'img PowerAppLogo' As image":
        Height: =58
        Image: =PowerApps
        Width: =61
        X: =1082
        Y: =701
        ZIndex: =9

    ContMain As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Regular
        Fill: =RGBA(255, 255, 255, 1)
        Height: =554
        Width: =907
        X: =443
        Y: =124
        ZIndex: =10

        MainWindowGroup As group:
            Height: =5
            Width: =5
            X: =-303
            Y: =-114
            ZIndex: =9

            lblResponse As label:
                Fill: =RGBA(255, 255, 255, 1)
                Height: =474
                Overflow: =Overflow.Scroll
                Text: =TrimEnds(First(vGeneralPrompt.choices).text)
                VerticalAlign: =VerticalAlign.Top
                Width: =901
                X: =6
                Y: =12
                ZIndex: =1

            imgOpenAILogo As image:
                Height: =497
                Image: =AZ_OAI
                Transparency: =0.9
                Visible: =OpenAILogo
                Width: =907
                Y: =28
                ZIndex: =2

            imgSpinner2_6 As image:
                Height: =168
                Image: =SpinnerGrey
                Visible: =spinner
                Width: =182
                X: =363
                Y: =149
                ZIndex: =3

            btnCopyResponse As button:
                Fill: =ThemeColors.Button
                HoverFill: =ThemeColors.Secondary
                OnSelect: |-
                    =Copy(TrimEnds(First(vGeneralPrompt.choices).text));
                    
                    Notify("Text copied to clipboard",NotificationType.Success,3000)
                Text: ="Copy Response"
                Visible: =!OpenAILogo
                X: =719
                Y: =492
                ZIndex: =4

            btnFeedback As button:
                DisplayMode: =If(8192 - (Len(vChatHistory) + Len(txtGeneralPrompt.Text)) <= 0 ,DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =RGBA(246, 88, 16, 1)
                FontWeight: =FontWeight.Normal
                HoverFill: =RGBA(251, 188, 159, 1)
                Italic: =true
                OnSelect: =Set(vToggleFeedback,!vToggleFeedback)
                Size: =12
                Text: ="Feedback?"
                Underline: =true
                Visible: =!OpenAILogo
                Width: =100
                X: =28
                Y: =492
                ZIndex: =5

            contFeedback As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.ExtraBold
                Fill: =RGBA(255, 255, 255, 1)
                Height: =383
                Visible: =vToggleFeedback
                Width: =760
                X: =74
                Y: =65
                ZIndex: =6

                Rectangle5_2 As rectangle:
                    Fill: =ThemeColors.Primary
                    Height: =42
                    Width: =760
                    ZIndex: =1

                Label12_2 As label:
                    Align: =Align.Center
                    Color: =RGBA(255, 255, 255, 1)
                    Height: =42
                    Text: ="Feedback"
                    Width: =760
                    ZIndex: =2

                icoClose_1 As icon.Cancel:
                    Color: =RGBA(255, 255, 255, 1)
                    Height: =42
                    HoverBorderColor: =RGBA(0, 32, 173, 1)
                    HoverFill: =RGBA(0,132,173,1)
                    Icon: =Icon.Cancel
                    OnSelect: =Set(vToggleFeedback,!vToggleFeedback)
                    Width: =52
                    X: =708
                    ZIndex: =3

                Button1 As button:
                    Fill: =ThemeColors.Primary
                    HoverFill: =ThemeColors.Accent
                    OnSelect: |-
                        =Patch(ChatAssistantFeedbacks,{
                                From:User().FullName,
                                Feedback: txtFeeback.Text,
                                'Query Question': vLastPrompt,
                                'AI Response':TrimEnds(First(vGeneralPrompt.choices).text)
                            }
                        );
                        Set(vToggleFeedback,!vToggleFeedback);
                        Reset(txtFeeback);
                        Notify("Feedback received succesfully",NotificationType.Success,3000)
                    Text: ="Submit"
                    X: =561
                    Y: =319
                    ZIndex: =5

                txtFeeback As text:
                    BorderColor: =RGBA(2, 94, 146, 1)
                    Default: =""
                    Height: =225
                    HintText: ="Feedback goes here..."
                    Mode: =TextMode.MultiLine
                    Width: =682
                    X: =40
                    Y: =60
                    ZIndex: =6

            Rating1 As rating:
                Default: =0
                DisabledFill: =Self.Fill
                DisplayMode: =DisplayMode.Edit
                FocusedBorderColor: =Color.Transparent
                FocusedBorderThickness: =0
                Height: =40
                HoverFill: =Self.Fill
                OnChange: |-
                    =Patch(ChatAssistantLogs,
                            LookUp(ChatAssistantLogs,DTS = vPatchRecord.DTS And FullName = vPatchRecord.FullName),
                            {
                                Rating:Rating1.Value
                            }
                        );
                    
                    Notify("AI Response Rating Changed Successfully",NotificationType.Success,3000);
                PressedFill: =Self.Fill
                RatingFill: =RGBA(246, 88, 16, 1)
                Visible: =!OpenAILogo
                Width: =200
                X: =354
                Y: =486
                ZIndex: =7

            lblRatingInstructions As label:
                Align: =Align.Center
                Color: =RGBA(246, 88, 16, 1)
                FontWeight: =FontWeight.Bold
                Height: =17
                Size: =8
                Text: ="RATE THIS ANSWER"
                Visible: =!OpenAILogo
                X: =379
                Y: =523
                ZIndex: =8

    ContMenu As groupContainer.manualLayoutContainer:
        Fill: =RGBA(255, 255, 255, 1)
        Height: =535
        Visible: =toggleMenu
        Width: =288
        X: =1055
        Y: =132
        ZIndex: =11

        Gallery2 As gallery.galleryVertical:
            Height: =Parent.Height
            Items: =Menu
            Layout: =Layout.Vertical
            TemplateFill: =Color.White
            TemplateSize: =51
            Transition: =Transition.Push
            Width: =Parent.Width
            ZIndex: =1

            Icon3 As icon.Add:
                Color: =ThemeColors.Accent
                Height: =40
                Icon: =ThisItem.Icon
                OnSelect: =Select(Parent)
                Width: =40
                ZIndex: =1

            Label2 As label:
                Color: =ThemeColors.Accent
                FontWeight: =FontWeight.Bold
                Height: =34
                OnSelect: =Select(Parent)
                Size: =18
                Text: =ThisItem.Name
                Width: =201
                X: =40
                Y: =9
                ZIndex: =2

            Rectangle4 As rectangle:
                Fill: =Color.Transparent
                Height: =Parent.TemplateHeight
                HoverFill: =RGBA(168,0,168,0.12)
                OnSelect: =Navigate(ThisItem.Screen);Set(toggleMenu,false);
                Width: =Parent.TemplateWidth
                ZIndex: =3

    icoMenu As icon.Hamburger:
        Color: =RGBA(255, 255, 255, 1)
        Icon: =Icon.Hamburger
        OnSelect: |-
            =Concurrent(
                Set(toggleMenu,!toggleMenu),
                Set(spinner,false),
                Set(OpenAILogo,true),
                Set(vGeneralPrompt,{Hide:false}),
                Set(vChatHistory,Blank())
            )
        X: =1286
        Y: =20
        ZIndex: =12

    RobotSplashGroup As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =23

        InfoSplash As label:
            Align: =Align.Center
            Fill: =RGBA(255, 255, 0, 1)
            FontWeight: =FontWeight.Semibold
            Height: =53
            Size: =26
            Text: ="Click this logo to start a new chat session... " & Text(Time(0, 0, (Timer1.Duration-Timer1.Value)/1000+1), "s")
            Visible: =vSplash And !vAdminNav
            Width: =984
            X: =283
            Y: =30
            ZIndex: =6

        Robot As image:
            Height: =193
            Image: =robot
            Visible: =vSplash And !vAdminNav
            Width: =205
            X: =118
            ZIndex: =7

