App As appinfo:
    BackEnabled: =false
    OnStart: |-
        =// Here you set all the users that will have admin access to the admin level screens, below we will check thier membership
        Set(vAdminList,Split(LookUp('Environment Variable Values','Environment Variable Definition'.'Display Name' = "envAdminList").Value,","));
        ClearCollect(
            colAdmins,
                ForAll(vAdminList,      
                {Admin:Value})
        );
        
        // Who is the user. Are they a member of the above Admins
        If(User().Email in colAdmins,
            ClearCollect(Menu, //Admin Menu
                Table(
                        {
                            Name: "Home",
                            Icon: Icon.Home,
                            Screen: General,
                            Color: ThemeColors.Secondary
                        },
                        {
                            Name: "User Log",
                            Icon : Icon.ListScrollWatchlist,
                            Screen: Log,
                            Color: ThemeColors.Secondary
                        },
                        {
                            Name: "AI Reporting",
                            Icon : Icon.Trending,
                            Screen: Analytics,
                            Color: ThemeColors.Secondary
                        },
                        {
                            Name: "Feedback",
                            Icon : Icon.Journal,
                            Screen: Feedback,
                            Color:ThemeColors.Secondary
                        },
                                        {
                            Name: "Moderation",
                            Icon : Icon.Alarm,
                            Screen: ModerationMgmt,
                            Color: ThemeColors.Secondary
                        },
                        {
                            Name: "Settings",
                            Icon : Icon.Settings,
                            Screen: Settings,
                            Color: ThemeColors.Secondary
                        }
                    )
            ),
            ClearCollect(Menu, // Regular User
                Table(
                        {
                            Name: "Home",
                            Icon: Icon.Home,
                            Screen: General,
                            Color: ColorValue("#d2f9d1")
                        },
                                        {
                            Name: "User Log",
                            Icon : Icon.ListScrollWatchlist,
                            Screen: Log,
                            Color: ThemeColors.Secondary
                        },
                        {
                            Name: "Settings",
                            Icon : Icon.Settings,
                            Screen: Settings,
                            Color: ThemeColors.Secondary
                        }
                    )
                )
        );
        
        //Does this user have a Prompt Engineerng Profile?
        
        If(CountRows(Filter(ChatAssistantSetings,SettingsOwner = User().Email And isSelected = true)) = 0,
        Patch(ChatAssistantSetings,
                        Defaults(ChatAssistantSetings),
                        {
                            'Setting Name':"Default Profile",
                            isSelected:true,
                            SettingsOwner:User().Email,
                            Prefix:"You are a business professional 40 years in age who writes in a very professional tone for your company.",
                            Suffix:"When applicable, provide any next steps in an ordered list. Otherwise do not include this.",
                            Temperature:0.7,
                            'Max Tokens':500
                        }
                    );
        Refresh(ChatAssistantSetings)
        );
        
        // Here we set a slew of global variables used on all the various screens
        Concurrent(
            Set(spinner,false), 
            Set(OpenAILogo,true),
            Set(toggleMenu,false),
            Set(gVersion,"v2.1.3.10 Azure"),
            Set(vRowCounter,0),
            Set(vToggleFeedback,false),
            Set(Prompt,{
                Prefix:LookUp(ChatAssistantSetings,SettingsOwner = User().Email And isSelected = true).Prefix & Char(10),
                UserPrompt:txtGeneralPrompt.Text & Char(10),
                Suffix:LookUp(ChatAssistantSetings,SettingsOwner = User().Email And isSelected = true).Suffix
            }),
            Set(ThemeColors,{
                Primary:RGBA(168,0,168,1),
                Secondary:RGBA(65,5,64,1),
                Accent:RGBA(63,53,120,1),
                Button:RGBA(168,0,168,1),
                ChartsGraphs: [RGBA(168,0,168,1),RGBA(65,5,64,1),RGBA(63,53,120,1),RGBA(0,97,170,1),RGBA(0,140,206,1),RGBA(0,184,223,1),RGBA(0,225,221,1),RGBA(169,168,204,1)],
                HeaderRight:"#410540",
                HeaderMiddle:"#A800A8",
                HeaderLeft:"#ffffff"
            }),
            Set(vAppURL,LookUp('Environment Variable Values','Environment Variable Definition'.'Display Name' = "envAppURL").Value)
        )
    StartScreen: |-
        =Switch(
                Param("SS"),
                    "1",Analytics,
                    "2",Feedback,
                General
        )

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

